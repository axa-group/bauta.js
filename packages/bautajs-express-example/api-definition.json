
{
  "openapi": "3.0.0",
  "info": {
    "version": "v1",
    "title": "Swagger Petstore",
    "license": {
      "name": "MIT"
    }
  },
  "paths": {
    "/unused": {
      "get": {
        "summary": "An endpoint definition without resolver",
        "operationId": "unused",
        "responses": {
          "200": {
            "description": "Something!"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/cancel/{number}": {
      "get": {
        "summary": "service to test cancel request. Waits number seconds until an answer is given but cancel if number is greather than 10 seconds",
        "operationId": "cancelRequest",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of seconds to wait",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Something!"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/randomYear": {
      "get": {
        "summary": "Provides information about a random year",
        "operationId": "randomYear",
        "responses": {
          "200": {
            "description": "Something!"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/randomYear2": {
      "get": {
        "summary": "Provides information about a random year",
        "operationId": "randomYear2",
        "responses": {
          "200": {
            "description": "Something!"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/factNumber/{number}": {
      "get": {
        "summary": "get a fact from a number",
        "operationId": "factNumber",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number to get a fact",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Something!"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/factNumber2/{number}": {
      "get": {
        "summary": "get a fact from a number",
        "operationId": "factNumber2",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number to get a fact",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Something!"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/articles": {
      "get": {
        "summary": "List all articles",
        "operationId": "listAllArticles",
        "tags": [
          "articles"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many items to return at one time (max 100)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of articles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Articles"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/chuckfacts/{string}": {
      "get": {
        "summary": "get a list of facts related to Chuck Norris",
        "operationId": "chuckFacts",
        "parameters": [
          {
            "name": "string",
            "in": "path",
            "description": "The string to get a chuck fact",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An object with a list of facts related to the string in the input request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChuckFactsResponse"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }, 
    "/minimap": {
      "get": {
        "summary": "List all the keys and values in minimap",
        "operationId": "getAllMinimap",
        "responses": {
          "200": {
            "description": "Something!"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post":  {
        "summary": "create a minimap register",
        "operationId": "createMinimap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestMinimap"
              }
            }
          },
          "description": "Request body payload for GDPR right to be forgotten operation."
        },
        "responses": {
          "202": {
            "description": "Request was accepted and will be processed."
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/minimap/{key}": {
      "get": {
        "summary": "get the value from a key",
        "operationId": "getMinimapByKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The key of the minimap",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Something!"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/multiple-path/specific": {
      "get": {
        "summary": "Specific endpoint to test path collision and route ordering",
        "operationId": "multiplePathSpecific",
        "responses": {
          "200": {
            "description": "Something!"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/multiple-path/{key}": {
      "get": {
        "summary": "General endpoint to test path collision and route ordering",
        "operationId": "multiplePathGeneral",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The key of the minimap",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Something!"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChuckFactsResponse": {
        "required": [
          "total", "result"
        ],
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChuckFact"
            }
          }
        }
      },
      "ChuckFact": {
        "required": [
          "created_at", "value"
        ],
        "properties": {
          "created_at": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Article": {
        "required": [
          "title"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "Articles": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Article"
        }
      },
      "Error": {
        "required": [
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "RequestMinimap": {
        "type": "object",
        "required": ["key", "value"],
        "description": "Request body for a minimap register",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the minimap register"
          },
          "value": {
            "type": "string",
            "description": "The value of the minimap register"
          }
        }
      }
    }
  }
}
