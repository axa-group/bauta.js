{
  "/oauth2/token": {
    "post": {
      "tags": ["authentication"],
      "summary": "Authenticate a user using his credentials - standard OAuth 2 version",
      "description": "",
      "operationId": "operation1",
      "parameters": [],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["grant_type"],
              "properties": {
                "grant_type": {
                  "type": "string",
                  "enum": ["password", "refresh_token", "authorization_code"]
                },
                "username": {
                  "description": "The resource owner user name, e.g. the customer's digital account login",
                  "type": "string"
                },
                "password": {
                  "description": "The resource owner password, e.g. the customer's digital account password",
                  "type": "string"
                },
                "refresh_token": {
                  "description": "The refresh token most recently acquired via the last call to this service (either with grant type password or refresh)",
                  "type": "string"
                },
                "code": {
                  "description": "The code shall be provided only with grant-type equals authorization_code, and is in that case mandatory",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "successful operation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Pets"
              }
            }
          }
        }
      }
    }
  },
  "/testStream": {
    "get": {
      "operationId": "testStream",
      "summary": "Download a file as Stream",
      "description": "Download one of the files as Stream test",
      "parameters": [],
      "tags": ["testStream"],
      "responses": {
        "200": {
          "description": "The requested file.",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "default": {
          "description": "unexpected error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/emptyResponseContent": {
    "get": {
      "operationId": "emptyResponseContent",
      "summary": "test endpoint to test empty response content operations",
      "description": "test endpoint to test empty response content operations",
      "parameters": [],
      "tags": ["emptyResponseContent"],
      "responses": {
        "200": {
          "description": "Something since content does not exist"
        },
        "default": {
          "description": "unexpected error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  }
}